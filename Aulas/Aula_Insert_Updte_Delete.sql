CREATE DATABASE NOTA_FISCAL_NORMALIZADA;

USE `NOTA_FISCAL_NORMALIZADA`;

CREATE TABLE `NOTA_FISCAL` (
	`NRO_NOTA` INT NOT NULL auto_increment PRIMARY KEY,
    `NM_CLIENTE` VARCHAR(256) NOT NULL,
    `END_CLIENTE` VARCHAR(256) NOT NULL,
    `NM_VENDEDOR` VARCHAR(256) NOT NULL,
    `DT_EMISSAO` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `VL_TOTAL` FLOAT NOT NULL
);

CREATE TABLE `PRODUTO` (
	`COD_PRODUTO` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `DESC_PRODUTO` VARCHAR(256) NOT NULL,
    `UN_MED` CHAR(2) NOT NULL,
    `VL_PRODUTO` FLOAT NOT NULL
);

CREATE TABLE `ITEM_NOTA_FISCAL`(
	`NRO_NOTA` INT NOT NULL,
    `COD_PRODUTO` INT NOT NULL,
    `QTD_PRODUTO` INT NOT NULL,
    `VL_PRECO` FLOAT NOT NULL,
    `VL_TOTAL` FLOAT NOT NULL,
    PRIMARY KEY(NRO_NOTA, COD_PRODUTO), -- Uma única primary key porém ela é composta, foi utilizado aqui pois não se pode repetir o mesmo produto dentro do nro da nota, apenas a quantidade
    CONSTRAINT FK_NRO_NOTA_NOTA_FISCAL
		FOREIGN KEY (NRO_NOTA)
        REFERENCES NOTA_FISCAL (NRO_NOTA),
	CONSTRAINT FK_COD_PRODUTO_PRODUTO
		FOREIGN KEY (COD_PRODUTO)
        REFERENCES PRODUTO(COD_PRODUTO)
);

-- Produtos

INSERT INTO `PRODUTO` (DESC_PRODUTO, UN_MED, VL_PRODUTO)
VALUES ('Leite', 'LT', 4.50);

INSERT INTO `PRODUTO` (DESC_PRODUTO, UN_MED, VL_PRODUTO)
VALUES ('Desodorante', 'UN', 8.00);

INSERT INTO `PRODUTO` (DESC_PRODUTO, UN_MED, VL_PRODUTO)
VALUES ('Linguiça', 'KG', 40.00);

SELECT * FROM `PRODUTO`;

-- Nota fiscal

INSERT INTO `NOTA_FISCAL` (NM_CLIENTE, END_CLIENTE, NM_VENDEDOR, VL_TOTAL)
VALUES ('Vinizao', 'Quartel', 'Gadeia', 100.00);

INSERT INTO `NOTA_FISCAL` (NM_CLIENTE, END_CLIENTE, NM_VENDEDOR, VL_TOTAL)
VALUES ('Igor', 'rio das Pedras', 'Dani', 150.00);

INSERT INTO `NOTA_FISCAL` (NM_CLIENTE, END_CLIENTE, NM_VENDEDOR, VL_TOTAL)
VALUES ('Thigas', 'Quartel', 'MauMau', 10.00);

INSERT INTO `NOTA_FISCAL` (NM_CLIENTE, END_CLIENTE, NM_VENDEDOR, VL_TOTAL)
VALUES ('Gusta', 'Concórdia', 'Gustavin', 200.00);

SELECT * FROM `NOTA_FISCAL`;

-- Itens da Nota

INSERT INTO `ITEM_NOTA_FISCAL` (NRO_NOTA, COD_PRODUTO, QTD_PRODUTO, VL_PRECO, VL_TOTAL)
VALUES (1, 1, 1, 4.50, 4.50);

INSERT INTO `ITEM_NOTA_FISCAL` (NRO_NOTA, COD_PRODUTO, QTD_PRODUTO, VL_PRECO, VL_TOTAL)
VALUES (1, 2, 2, 40, 80);

INSERT INTO `ITEM_NOTA_FISCAL` (NRO_NOTA, COD_PRODUTO, QTD_PRODUTO, VL_PRECO, VL_TOTAL)
VALUES (1, 3, 10, 100.00, 1000.00);

INSERT INTO `ITEM_NOTA_FISCAL` (NRO_NOTA, COD_PRODUTO, QTD_PRODUTO, VL_PRECO, VL_TOTAL)
VALUES (2, 2, 5, 70, 20);

INSERT INTO `ITEM_NOTA_FISCAL` (NRO_NOTA, COD_PRODUTO, QTD_PRODUTO, VL_PRECO, VL_TOTAL)
VALUES (3, 2, 5, 920.00, 450.00);

INSERT INTO `ITEM_NOTA_FISCAL` (NRO_NOTA, COD_PRODUTO, QTD_PRODUTO, VL_PRECO, VL_TOTAL)
VALUES (4,1, 5, 1000.00, 320.00);

SELECT * FROM ITEM_NOTA_FISCAL;

-- Atualizando dados de colunas em tabelas com WHERE
SELECT * FROM `PRODUTO` WHERE COD_PRODUTO = 3;
UPDATE PRODUTO
SET VL_PRODUTO = 45, DESC_PRODUTO = 'Atualizado', UN_MED = 'CX'
WHERE COD_PRODUTO = 3;

-- Neste caso uma excessão será lançada: Violação da Constraint, tem outra tabela que depende desse "COD_PRODUTO", resumindo, tem nota fiscal com esse produto e não pode apagar por conta dessa ligação

INSERT INTO PRODUTO (DESC_PRODUTO, UN_MED, VL_PRODUTO)
VALUES ('Teste delete', 'LT', 5.50);

-- Excluindo registros de tabelas

DELETE FROM PRODUTO
WHERE COD_PRODUTO = 4;
